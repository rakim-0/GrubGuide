<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GrubGuide - Add Menu</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://unpkg.com/dropzone@6.0.0-beta.1/dist/dropzone.css" rel="stylesheet" type="text/css" />
</head>
<style>
    body {
        background-size: 100% 120%;
    }

    h1 {
        font-family: helvetica;
        margin-top: 3rem;
        font-size: 4rem;
        text-align: center;
    }

    .form-container {
        max-width: 600px;
        margin: 0 auto;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .dropzone {
        border: 2px dashed #0087F7;
        border-radius: 5px;
        background: white;
        min-height: 150px;
        padding: 20px;
        box-sizing: border-box;
    }
</style>

<body class="d-flex flex-column min-vh-100">
    <%- include('partials/navbar') %>
        <main class="flex-grow-1 pt-3">
            <h1>Add New Menu</h1>
            <div class="form-container pt-3">
                <form id="arf" action="/api/menu" method="POST">
                    <div class="form-group">
                        <input type="hidden" id="rest_id" name="rest_id" value=<%=restId %>>
                    </div>
                    <div class="form-group">
                        <input type="hidden" id="rating" name="rating" value=0.0>
                    </div>
                    <div class="form-group">
                        <label for="menu_type">Menu Type:</label>
                        <select class="form-control" id="menu_type" name="menu_type" required>
                            <option value="morning">Morning</option>
                            <option value="lunch">Lunch</option>
                            <option value="dinner">Dinner</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="gallery_image">Gallery Image URL:</label>
                        <div class="input-group">
                            <input class="form-control" type="text" id="gallery_image" name="gallery_image" readonly>
                            <button class="btn btn-outline-secondary" type="button" id="upload-image-btn">Upload
                                Image</button>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-dark w-100">Add Menu</button>
                </form>
            </div>
        </main>

        <!-- Modal for Dropzone -->
        <div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="uploadModalLabel">Upload Image</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div id="myDropzone" class="dropzone"></div>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://unpkg.com/dropzone@6.0.0-beta.1/dist/dropzone-min.js"></script>
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const uploadModal = new bootstrap.Modal(document.getElementById('uploadModal'));
                const uploadBtn = document.getElementById('upload-image-btn');
                const galleryImageInput = document.getElementById('gallery_image');

                uploadBtn.addEventListener('click', function () {
                    uploadModal.show();
                });

                let myDropzone = new Dropzone("#myDropzone", {
                    url: "/upload", // Replace with your actual upload endpoint
                    autoProcessQueue: true,
                    uploadMultiple: false,
                    maxFiles: 1,
                    maxFilesize: 1,
                    acceptedFiles: 'image/*',
                    addRemoveLinks: true,
                });

                myDropzone.on("success", function (file, response) {
                    galleryImageInput.value = response.imageUrl; // Assuming the server returns an object with imageUrl
                    uploadModal.hide();
                    myDropzone.removeAllFiles();
                });

                document.getElementById('arf').addEventListener('submit', function (e) {
                    e.preventDefault();
                    const formData = new FormData(this);
                    const sentData = Object.fromEntries(formData.entries());
                    fetch('/api/menu', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(sentData)
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.rest_id && data.id) {
                                window.location.href = `/create-dish?rest_id=${data.rest_id}&menu_id=${data.id}`;
                            } else {
                                alert('Error creating menu. Please try again.');
                            }
                        })
                        .catch(error => {
                            alert('An error occurred. Please try again.');
                        });
                });
            });
        </script>
        <%- include('partials/footer') %>
</body>

</html>